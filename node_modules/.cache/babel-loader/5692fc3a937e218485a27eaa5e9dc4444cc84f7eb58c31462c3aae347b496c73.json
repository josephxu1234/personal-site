{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/josephxu/Desktop/ps_test/personal-site/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar list = {\n  split: function split(string, separators, last) {\n    var array = [];\n    var current = '';\n    var split = false;\n    var func = 0;\n    var inQuote = false;\n    var prevQuote = '';\n    var escape = false;\n    var _iterator = _createForOfIteratorHelper(string),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var letter = _step.value;\n        if (escape) {\n          escape = false;\n        } else if (letter === '\\\\') {\n          escape = true;\n        } else if (inQuote) {\n          if (letter === prevQuote) {\n            inQuote = false;\n          }\n        } else if (letter === '\"' || letter === \"'\") {\n          inQuote = true;\n          prevQuote = letter;\n        } else if (letter === '(') {\n          func += 1;\n        } else if (letter === ')') {\n          if (func > 0) func -= 1;\n        } else if (func === 0) {\n          if (separators.includes(letter)) split = true;\n        }\n        if (split) {\n          if (current !== '') array.push(current.trim());\n          current = '';\n          split = false;\n        } else {\n          current += letter;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (last || current !== '') array.push(current.trim());\n    return array;\n  },\n  space: function space(string) {\n    var spaces = [' ', '\\n', '\\t'];\n    return list.split(string, spaces);\n  },\n  comma: function comma(string) {\n    return list.split(string, [','], true);\n  }\n};\nmodule.exports = list;\nlist.default = list;","map":{"version":3,"names":["_createForOfIteratorHelper","require","default","list","split","string","separators","last","array","current","func","inQuote","prevQuote","escape","_iterator","_step","s","n","done","letter","value","includes","push","trim","err","e","f","space","spaces","comma","module","exports"],"sources":["/Users/josephxu/Desktop/ps_test/personal-site/node_modules/postcss/lib/list.js"],"sourcesContent":["'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,0BAAA,GAAAC,OAAA,mHAAAC,OAAA;AAEZ,IAAIC,IAAI,GAAG;EACTC,KAAK,WAAAA,MAACC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAE;IAC9B,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAIL,KAAK,GAAG,KAAK;IAEjB,IAAIM,IAAI,GAAG,CAAC;IACZ,IAAIC,OAAO,GAAG,KAAK;IACnB,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,MAAM,GAAG,KAAK;IAAA,IAAAC,SAAA,GAAAd,0BAAA,CAECK,MAAM;MAAAU,KAAA;IAAA;MAAzB,KAAAD,SAAA,CAAAE,CAAA,MAAAD,KAAA,GAAAD,SAAA,CAAAG,CAAA,IAAAC,IAAA,GAA2B;QAAA,IAAlBC,MAAM,GAAAJ,KAAA,CAAAK,KAAA;QACb,IAAIP,MAAM,EAAE;UACVA,MAAM,GAAG,KAAK;QAChB,CAAC,MAAM,IAAIM,MAAM,KAAK,IAAI,EAAE;UAC1BN,MAAM,GAAG,IAAI;QACf,CAAC,MAAM,IAAIF,OAAO,EAAE;UAClB,IAAIQ,MAAM,KAAKP,SAAS,EAAE;YACxBD,OAAO,GAAG,KAAK;UACjB;QACF,CAAC,MAAM,IAAIQ,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;UAC3CR,OAAO,GAAG,IAAI;UACdC,SAAS,GAAGO,MAAM;QACpB,CAAC,MAAM,IAAIA,MAAM,KAAK,GAAG,EAAE;UACzBT,IAAI,IAAI,CAAC;QACX,CAAC,MAAM,IAAIS,MAAM,KAAK,GAAG,EAAE;UACzB,IAAIT,IAAI,GAAG,CAAC,EAAEA,IAAI,IAAI,CAAC;QACzB,CAAC,MAAM,IAAIA,IAAI,KAAK,CAAC,EAAE;UACrB,IAAIJ,UAAU,CAACe,QAAQ,CAACF,MAAM,CAAC,EAAEf,KAAK,GAAG,IAAI;QAC/C;QAEA,IAAIA,KAAK,EAAE;UACT,IAAIK,OAAO,KAAK,EAAE,EAAED,KAAK,CAACc,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,CAAC,CAAC;UAC9Cd,OAAO,GAAG,EAAE;UACZL,KAAK,GAAG,KAAK;QACf,CAAC,MAAM;UACLK,OAAO,IAAIU,MAAM;QACnB;MACF;IAAC,SAAAK,GAAA;MAAAV,SAAA,CAAAW,CAAA,CAAAD,GAAA;IAAA;MAAAV,SAAA,CAAAY,CAAA;IAAA;IAED,IAAInB,IAAI,IAAIE,OAAO,KAAK,EAAE,EAAED,KAAK,CAACc,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,CAAC,CAAC;IACtD,OAAOf,KAAK;EACd,CAAC;EAEDmB,KAAK,WAAAA,MAACtB,MAAM,EAAE;IACZ,IAAIuB,MAAM,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IAC9B,OAAOzB,IAAI,CAACC,KAAK,CAACC,MAAM,EAAEuB,MAAM,CAAC;EACnC,CAAC;EAEDC,KAAK,WAAAA,MAACxB,MAAM,EAAE;IACZ,OAAOF,IAAI,CAACC,KAAK,CAACC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;EACxC;AACF,CAAC;AAEDyB,MAAM,CAACC,OAAO,GAAG5B,IAAI;AACrBA,IAAI,CAACD,OAAO,GAAGC,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}