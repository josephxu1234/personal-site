{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/josephxu/Desktop/ps_test/personal-site/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/josephxu/Desktop/ps_test/personal-site/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * React Router DOM v6.0.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { useRef, useState, useLayoutEffect, createElement, forwardRef, useCallback, useMemo } from 'react';\nimport { createBrowserHistory, createHashHistory, createPath } from 'history';\nimport { Router, useHref, useLocation, useResolvedPath, useNavigate } from 'react-router';\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useParams, useResolvedPath, useRoutes } from 'react-router';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _excluded = [\"onClick\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\"];\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} ////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A <Router> for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n    children = _ref.children,\n    window = _ref.window;\n  var historyRef = useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window\n    });\n  }\n  var history = historyRef.current;\n  var _useState = useState({\n      action: history.action,\n      location: history.location\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * A <Router> for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n    children = _ref2.children,\n    window = _ref2.window;\n  var historyRef = useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window\n    });\n  }\n  var history = historyRef.current;\n  var _useState3 = useState({\n      action: history.action,\n      location: history.location\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    state = _useState4[0],\n    setState = _useState4[1];\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nvar Link = /*#__PURE__*/forwardRef(function LinkWithRef(_ref3, ref) {\n  var onClick = _ref3.onClick,\n    reloadDocument = _ref3.reloadDocument,\n    _ref3$replace = _ref3.replace,\n    replace = _ref3$replace === void 0 ? false : _ref3$replace,\n    state = _ref3.state,\n    target = _ref3.target,\n    to = _ref3.to,\n    rest = _objectWithoutPropertiesLoose(_ref3, _excluded);\n  var href = useHref(to);\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented && !reloadDocument) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = /*#__PURE__*/forwardRef(function NavLinkWithRef(_ref4, ref) {\n  var _ref4$ariaCurrent = _ref4[\"aria-current\"],\n    ariaCurrentProp = _ref4$ariaCurrent === void 0 ? \"page\" : _ref4$ariaCurrent,\n    _ref4$caseSensitive = _ref4.caseSensitive,\n    caseSensitive = _ref4$caseSensitive === void 0 ? false : _ref4$caseSensitive,\n    _ref4$className = _ref4.className,\n    classNameProp = _ref4$className === void 0 ? \"\" : _ref4$className,\n    _ref4$end = _ref4.end,\n    end = _ref4$end === void 0 ? false : _ref4$end,\n    styleProp = _ref4.style,\n    to = _ref4.to,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded2);\n  var location = useLocation();\n  var path = useResolvedPath(to);\n  var locationPathname = location.pathname;\n  var toPathname = path.pathname;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    toPathname = toPathname.toLowerCase();\n  }\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null].filter(Boolean).join(\" \");\n  }\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive\n  }) : styleProp;\n  return /*#__PURE__*/createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n} ////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\nfunction useLinkClickHandler(to, _temp) {\n  var _ref5 = _temp === void 0 ? {} : _temp,\n    target = _ref5.target,\n    replaceProp = _ref5.replace,\n    state = _ref5.state;\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to);\n  return useCallback(function (event) {\n    if (event.button === 0 && (\n    // Ignore everything but left clicks\n    !target || target === \"_self\") &&\n    // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here.\n\n      var replace = !!replaceProp || createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = useRef(createSearchParams(defaultInit));\n  var location = useLocation();\n  var searchParams = useMemo(function () {\n    var searchParams = createSearchParams(location.search);\n    var _iterator = _createForOfIteratorHelper(defaultSearchParamsRef.current.keys()),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!searchParams.has(key)) {\n          defaultSearchParamsRef.current.getAll(key).forEach(function (value) {\n            searchParams.append(key, value);\n          });\n        }\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return searchParams;\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = useCallback(function (nextInit, navigateOptions) {\n    navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n  }, [navigate]);\n  return [searchParams, setSearchParams];\n}\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\nexport { BrowserRouter, HashRouter, Link, NavLink, createSearchParams, useLinkClickHandler, useSearchParams };","map":{"version":3,"names":["warning","cond","message","console","warn","Error","e","BrowserRouter","_ref","basename","children","window","historyRef","useRef","current","createBrowserHistory","history","_useState","useState","action","location","_useState2","_slicedToArray","state","setState","useLayoutEffect","listen","createElement","Router","navigationType","navigator","HashRouter","_ref2","createHashHistory","_useState3","_useState4","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link","forwardRef","LinkWithRef","_ref3","ref","onClick","reloadDocument","_ref3$replace","replace","target","to","rest","_objectWithoutPropertiesLoose","_excluded","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","_extends","process","env","NODE_ENV","displayName","NavLink","NavLinkWithRef","_ref4","_ref4$ariaCurrent","ariaCurrentProp","_ref4$caseSensitive","caseSensitive","_ref4$className","className","classNameProp","_ref4$end","end","styleProp","style","_excluded2","useLocation","path","useResolvedPath","locationPathname","pathname","toPathname","toLowerCase","isActive","startsWith","charAt","length","ariaCurrent","undefined","filter","Boolean","join","_temp","_ref5","replaceProp","navigate","useNavigate","useCallback","button","preventDefault","createPath","useSearchParams","defaultInit","URLSearchParams","defaultSearchParamsRef","createSearchParams","searchParams","useMemo","search","_iterator","_createForOfIteratorHelper","keys","_step","_loop","key","value","has","getAll","forEach","append","s","n","done","err","f","setSearchParams","nextInit","navigateOptions","init","Array","isArray","Object","reduce","memo","concat","map","v"],"sources":["/Users/josephxu/Desktop/ps_test/packages/react-router-dom/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type { BrowserHistory, HashHistory } from \"history\";\nimport { createBrowserHistory, createHashHistory, createPath } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes\n};\n\nexport type {\n  Location,\n  Path,\n  To,\n  NavigationType,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A <Router> for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A <Router> for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps extends Omit<LinkProps, \"className\" | \"style\"> {\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAASA,OAATA,CAAiBC,IAAjB,EAAgCC,OAAhC,EAAuD;EACrD,IAAI,CAACD,IAAL,EAAW;IACT;IACA,IAAI,OAAOE,OAAP,KAAmB,WAAvB,EAAoCA,OAAO,CAACC,IAAR,CAAaF,OAAb;IAEpC,IAAI;MACF;MACA;MACA;MACA;MACA;MACA,MAAM,IAAIG,KAAJ,CAAUH,OAAV,CAAN,CANE;IAQH,CARD,CAQE,OAAOI,CAAP,EAAU;EACb;AACF;AA4ED;AACA;;AAQA;AACA;AACA;AACO,SAASC,aAATA,CAAAC,IAAA,EAIgB;EAAA,IAHrBC,QAD4B,GAIPD,IAAA,CAHrBC,QAD4B;IAE5BC,QAF4B,GAIPF,IAAA,CAFrBE,QAF4B;IAG5BC,MAAA,GACqBH,IAAA,CADrBG,MAAA;EAEA,IAAIC,UAAU,GAAGC,MAAA,EAAjB;EACA,IAAID,UAAU,CAACE,OAAX,IAAsB,IAA1B,EAAgC;IAC9BF,UAAU,CAACE,OAAX,GAAqBC,oBAAoB,CAAC;MAAEJ,MAAA,EAAAA;IAAF,CAAD,CAAzC;EACD;EAED,IAAIK,OAAO,GAAGJ,UAAU,CAACE,OAAzB;EACA,IAAAG,SAAA,GAAwBC,QAAA,CAAe;MACrCC,MAAM,EAAEH,OAAO,CAACG,MADqB;MAErCC,QAAQ,EAAEJ,OAAO,CAACI;IAFmB,CAAf,CAAxB;IAAAC,UAAA,GAAAC,cAAA,CAAAL,SAAA;IAAKM,KAAD,GAAAF,UAAA;IAAQG,QAAR,GAAAH,UAAA;EAKJI,eAAA,CAAsB;IAAA,OAAMT,OAAO,CAACU,MAAR,CAAeF,QAAf,CAA5B;EAAA,GAAsD,CAACR,OAAD,CAAtD;EAEA,oBACEW,aAAA,CAACC,MAAD;IACEnB,QAAQ,EAAEA,QADZ;IAEEC,QAAQ,EAAEA,QAFZ;IAGEU,QAAQ,EAAEG,KAAK,CAACH,QAHlB;IAIES,cAAc,EAAEN,KAAK,CAACJ,MAJxB;IAKEW,SAAS,EAAEd;EALb,EADF;AASD;;AAQD;AACA;AACA;AACA;AACO,SAASe,UAATA,CAAAC,KAAA,EAAqE;EAAA,IAA/CvB,QAAF,GAAiDuB,KAAA,CAA/CvB,QAAF;IAAYC,QAAZ,GAAiDsB,KAAA,CAArCtB,QAAZ;IAAsBC,MAAA,GAA2BqB,KAAA,CAA3BrB,MAAA;EAC/C,IAAIC,UAAU,GAAGC,MAAA,EAAjB;EACA,IAAID,UAAU,CAACE,OAAX,IAAsB,IAA1B,EAAgC;IAC9BF,UAAU,CAACE,OAAX,GAAqBmB,iBAAiB,CAAC;MAAEtB,MAAA,EAAAA;IAAF,CAAD,CAAtC;EACD;EAED,IAAIK,OAAO,GAAGJ,UAAU,CAACE,OAAzB;EACA,IAAAoB,UAAA,GAAwBhB,QAAA,CAAe;MACrCC,MAAM,EAAEH,OAAO,CAACG,MADqB;MAErCC,QAAQ,EAAEJ,OAAO,CAACI;IAFmB,CAAf,CAAxB;IAAAe,UAAA,GAAAb,cAAA,CAAAY,UAAA;IAAKX,KAAD,GAAAY,UAAA;IAAQX,QAAR,GAAAW,UAAA;EAKJV,eAAA,CAAsB;IAAA,OAAMT,OAAO,CAACU,MAAR,CAAeF,QAAf,CAA5B;EAAA,GAAsD,CAACR,OAAD,CAAtD;EAEA,oBACEW,aAAA,CAACC,MAAD;IACEnB,QAAQ,EAAEA,QADZ;IAEEC,QAAQ,EAAEA,QAFZ;IAGEU,QAAQ,EAAEG,KAAK,CAACH,QAHlB;IAIES,cAAc,EAAEN,KAAK,CAACJ,MAJxB;IAKEW,SAAS,EAAEd;EALb,EADF;AASD;AAED,SAASoB,eAATA,CAAyBC,KAAzB,EAAkD;EAChD,OAAO,CAAC,EAAEA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,MAAvB,IAAiCF,KAAK,CAACG,OAAvC,IAAkDH,KAAK,CAACI,QAA1D,CAAR;AACD;;AAUD;AACA;AACA;IACaC,IAAI,gBAAGC,UAAA,CAClB,SAASC,WAATA,CAAAC,KAAA,EAEEC,GAFF,EAGE;EAAA,IAFEC,OAAF,GAEAF,KAAA,CAFEE,OAAF;IAAWC,cAAX,GAEAH,KAAA,CAFWG,cAAX;IAAAC,aAAA,GAEAJ,KAAA,CAF2BK,OAAO;IAAPA,OAAO,GAAAD,aAAA,cAAG,KAArC,GAAAA,aAAA;IAA4C1B,KAA5C,GAEAsB,KAAA,CAF4CtB,KAA5C;IAAmD4B,MAAnD,GAEAN,KAAA,CAFmDM,MAAnD;IAA2DC,EAAA,GAE3DP,KAAA,CAF2DO,EAAA;IAAOC,IAElE,GAAAC,6BAAA,CAAAT,KAAA,EAAAU,SAAA;EACA,IAAIC,IAAI,GAAGC,OAAO,CAACL,EAAD,CAAlB;EACA,IAAIM,eAAe,GAAGC,mBAAmB,CAACP,EAAD,EAAK;IAAEF,OAAF,EAAEA,OAAF;IAAW3B,KAAX,EAAWA,KAAX;IAAkB4B,MAAA,EAAAA;EAAlB,CAAL,CAAzC;EACA,SAASS,WAATA,CACEvB,KADF,EAEE;IACA,IAAIU,OAAJ,EAAaA,OAAO,CAACV,KAAD,CAAP;IACb,IAAI,CAACA,KAAK,CAACwB,gBAAP,IAA2B,CAACb,cAAhC,EAAgD;MAC9CU,eAAe,CAACrB,KAAD,CAAf;IACD;EACF;EAED;IACE;IACAV,aAAA,MAAAmC,QAAA,KACMT,IADN;MAEEG,IAAI,EAAEA,IAFR;MAGET,OAAO,EAAEa,WAHX;MAIEd,GAAG,EAAEA,GAJP;MAKEK,MAAM,EAAEA;IALV;EAAA;AAQH,CA1BiB;AA6BpB,IAAAY,OAAA,CAAAC,GAAA,CAAAC,QAAA,mBAAa;EACXvB,IAAI,CAACwB,WAAL,GAAmB,MAAnB;AACD;;AAWD;AACA;AACA;IACaC,OAAO,gBAAGxB,UAAA,CACrB,SAASyB,cAATA,CAAAC,KAAA,EAUEvB,GAVF,EAWE;EAAA,IAAAwB,iBAAA,GAAAD,KAAA,CATE;IAAgBE,eAAe,GAAAD,iBAAA,cAAG,MADpC,GAAAA,iBAAA;IAAAE,mBAAA,GAUAH,KAAA,CAREI,aAAa;IAAbA,aAAa,GAAAD,mBAAA,cAAG,KAFlB,GAAAA,mBAAA;IAAAE,eAAA,GAUAL,KAAA,CAPEM,SAAS;IAAEC,aAAa,GAAAF,eAAA,cAAG,EAH7B,GAAAA,eAAA;IAAAG,SAAA,GAUAR,KAAA,CANES,GAAG;IAAHA,GAAG,GAAAD,SAAA,cAAG,KAJR,GAAAA,SAAA;IAKSE,SALT,GAUAV,KAAA,CALEW,KAAK;IACL5B,EAAA,GAIFiB,KAAA,CAJEjB,EAAA;IACGC,IAGL,GAAAC,6BAAA,CAAAe,KAAA,EAAAY,UAAA;EACA,IAAI7D,QAAQ,GAAG8D,WAAW,EAA1B;EACA,IAAIC,IAAI,GAAGC,eAAe,CAAChC,EAAD,CAA1B;EAEA,IAAIiC,gBAAgB,GAAGjE,QAAQ,CAACkE,QAAhC;EACA,IAAIC,UAAU,GAAGJ,IAAI,CAACG,QAAtB;EACA,IAAI,CAACb,aAAL,EAAoB;IAClBY,gBAAgB,GAAGA,gBAAgB,CAACG,WAAjB,EAAnB;IACAD,UAAU,GAAGA,UAAU,CAACC,WAAX,EAAb;EACD;EAED,IAAIC,QAAQ,GACVJ,gBAAgB,KAAKE,UAArB,IACC,CAACT,GAAD,IACCO,gBAAgB,CAACK,UAAjB,CAA4BH,UAA5B,CADD,IAECF,gBAAgB,CAACM,MAAjB,CAAwBJ,UAAU,CAACK,MAAnC,MAA+C,GAJnD;EAMA,IAAIC,WAAW,GAAGJ,QAAQ,GAAGlB,eAAH,GAAqBuB,SAA/C;EAEA,IAAInB,SAAJ;EACA,IAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyC;IACvCD,SAAS,GAAGC,aAAa,CAAC;MAAEa,QAAA,EAAAA;IAAF,CAAD,CAAzB;EACD,CAFD,MAEO;IACL;IACA;IACA;IACA;IACA;IACAd,SAAS,GAAG,CAACC,aAAD,EAAgBa,QAAQ,GAAG,QAAH,GAAc,IAAtC,EACTM,MADS,CACFC,OADE,EAETC,IAFS,CAEJ,GAFI,CAAZ;EAGD;EAED,IAAIjB,KAAK,GACP,OAAOD,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAAC;IAAEU,QAAA,EAAAA;EAAF,CAAD,CAA3C,GAA4DV,SAD9D;EAGA,oBACEpD,aAAA,CAACe,IAAD,EAAAoB,QAAA,KACMT,IADN;IAEE,gBAAcwC,WAFhB;IAGElB,SAAS,EAAEA,SAHb;IAIE7B,GAAG,EAAEA,GAJP;IAKEkC,KAAK,EAAEA,KALT;IAME5B,EAAE,EAAEA;EANN,GADF;AAUD,CA1DoB;AA6DvB,IAAAW,OAAA,CAAAC,GAAA,CAAAC,QAAA,mBAAa;EACXE,OAAO,CAACD,WAAR,GAAsB,SAAtB;AACD;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACO,SAASP,mBAATA,CACLP,EADK,EAAA8C,KAAA,EAW6C;EAAA,IAAAC,KAAA,GAAAD,KAAA,cAD9C,EAC8C,GAAAA,KAAA;IARhD/C,MADF,GAAAgD,KAAA,CACEhD,MADF;IAEWiD,WAFX,GAAAD,KAAA,CAEEjD,OAAO;IACP3B,KAAA,GAAA4E,KAAA,CAAA5E,KAAA;EAOF,IAAI8E,QAAQ,GAAGC,WAAW,EAA1B;EACA,IAAIlF,QAAQ,GAAG8D,WAAW,EAA1B;EACA,IAAIC,IAAI,GAAGC,eAAe,CAAChC,EAAD,CAA1B;EAEA,OAAOmD,WAAA,CACJ,UAAAlE,KAAD,EAA4C;IAC1C,IACEA,KAAK,CAACmE,MAAN,KAAiB,CAAjB;IAAA;IACC,CAACrD,MAAD,IAAWA,MAAM,KAAK,OADvB;IAAA;IAEA,CAACf,eAAe,CAACC,KAAD,CAHlB;IAAA,EAIE;MACAA,KAAK,CAACoE,cAAN,GADA;MAIA;;MACA,IAAIvD,OAAO,GACT,CAAC,CAACkD,WAAF,IAAiBM,UAAU,CAACtF,QAAD,CAAV,KAAyBsF,UAAU,CAACvB,IAAD,CADtD;MAGAkB,QAAQ,CAACjD,EAAD,EAAK;QAAEF,OAAF,EAAEA,OAAF;QAAW3B,KAAA,EAAAA;MAAX,CAAL,CAAR;IACD;EACF,CAhBI,EAiBL,CAACH,QAAD,EAAWiF,QAAX,EAAqBlB,IAArB,EAA2BiB,WAA3B,EAAwC7E,KAAxC,EAA+C4B,MAA/C,EAAuDC,EAAvD,CAjBK,CAAP;AAmBD;AAED;AACA;AACA;AACA;;AACO,SAASuD,eAATA,CAAyBC,WAAzB,EAA4D;EACjE7C,OAAA,CAAAC,GAAA,CAAAC,QAAA,oBAAAjE,OAAO,CACL,OAAO6G,eAAP,KAA2B,WADtB,EAEL,meAFK,CAAP;EAYA,IAAIC,sBAAsB,GAAGjG,MAAA,CAAakG,kBAAkB,CAACH,WAAD,CAA/B,CAA7B;EAEA,IAAIxF,QAAQ,GAAG8D,WAAW,EAA1B;EACA,IAAI8B,YAAY,GAAGC,OAAA,CAAc,YAAM;IACrC,IAAID,YAAY,GAAGD,kBAAkB,CAAC3F,QAAQ,CAAC8F,MAAV,CAArC;IAAA,IAAAC,SAAA,GAAAC,0BAAA,CAEgBN,sBAAsB,CAAChG,OAAvB,CAA+BuG,IAA/B,EAAhB;MAAAC,KAAA;IAAA;MAAA,IAAAC,KAAA,YAAAA,MAAA;QAAA,IAASC,GAAT,GAAAF,KAAA,CAAAG,KAAA;QACE,IAAI,CAACT,YAAY,CAACU,GAAb,CAAiBF,GAAjB,CAAL,EAA4B;UAC1BV,sBAAsB,CAAChG,OAAvB,CAA+B6G,MAA/B,CAAsCH,GAAtC,EAA2CI,OAA3C,CAAmD,UAAAH,KAAK,EAAI;YAC1DT,YAAY,CAACa,MAAb,CAAoBL,GAApB,EAAyBC,KAAzB;UACD,CAFD;QAGD;MAAA;MALH,KAAAN,SAAA,CAAAW,CAAA,MAAAR,KAAA,GAAAH,SAAA,CAAAY,CAAA,IAAAC,IAAA,GAAuD;QAAAT,KAAA;MAMtD;IAAA,SAAAU,GAAA;MAAAd,SAAA,CAAA7G,CAAA,CAAA2H,GAAA;IAAA;MAAAd,SAAA,CAAAe,CAAA;IAAA;IAED,OAAOlB,YAAP;EACD,CAZkB,EAYhB,CAAC5F,QAAQ,CAAC8F,MAAV,CAZgB,CAAnB;EAcA,IAAIb,QAAQ,GAAGC,WAAW,EAA1B;EACA,IAAI6B,eAAe,GAAG5B,WAAA,CACpB,UACE6B,QADF,EAEEC,eAFF,EAGK;IACHhC,QAAQ,CAAC,MAAMU,kBAAkB,CAACqB,QAAD,CAAzB,EAAqCC,eAArC,CAAR;EACD,CANmB,EAOpB,CAAChC,QAAD,CAPoB,CAAtB;EAUA,OAAO,CAACW,YAAD,EAAemB,eAAf,CAAP;AACD;;AAUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASpB,kBAATA,CACLuB,IADK,EAEY;EAAA,IADjBA,IACiB;IADjBA,IACiB,GADW,EACX;EAAA;EACjB,OAAO,IAAIzB,eAAJ,CACL,OAAOyB,IAAP,KAAgB,QAAhB,IACAC,KAAK,CAACC,OAAN,CAAcF,IAAd,CADA,IAEAA,IAAI,YAAYzB,eAFhB,GAGIyB,IAHJ,GAIIG,MAAM,CAACpB,IAAP,CAAYiB,IAAZ,EAAkBI,MAAlB,CAAyB,UAACC,IAAD,EAAOnB,GAAP,EAAe;IACtC,IAAIC,KAAK,GAAGa,IAAI,CAACd,GAAD,CAAhB;IACA,OAAOmB,IAAI,CAACC,MAAL,CACLL,KAAK,CAACC,OAAN,CAAcf,KAAd,IAAuBA,KAAK,CAACoB,GAAN,CAAU,UAAAC,CAAC;MAAA,OAAI,CAACtB,GAAD,EAAMsB,CAAN,CAAf;IAAA,EAAvB,GAAkD,CAAC,CAACtB,GAAD,EAAMC,KAAN,CAAD,CAD7C,CAAP;EAGD,CALD,EAKG,EALH,CALC,CAAP;AAYD"},"metadata":{},"sourceType":"module","externalDependencies":[]}